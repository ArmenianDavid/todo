{"version":3,"sources":["Components/Header/Header.js","Components/Input/Input.js","Components/Render/Render.js","Components/Buttons/Buttons.js","Components/TodoCounts/TodoCounts.js","App.js","index.js"],"names":["Header","className","Input","handleOnChange","e","localStorage","setItem","target","value","setState","input","console","log","state","getItem","this","nameInput","focus","type","placeholder","id","defaultValue","onChange","ref","onKeyDown","props","handleKeyDown","React","Component","Render","todos","removeTodo","handleChangeTodoStatus","renameTodo","handleRenameTodo","map","todo","key","defaultChecked","isComplited","onClick","onDoubleClick","style","isRenaming","display","name","fontSize","Buttons","handleChangeStateStatus","status","clearTodos","TodoCounts","active","filter","length","App","newArray","filterTodos","todoId","find","clear","JSON","parse","stringify","normalizedTodos","ReactDOM","render","document","getElementById"],"mappings":"uNAUeA,EARA,WACX,OACI,yBAAKC,UAAU,oBACX,wBAAIA,UAAU,UAAd,WCmCGC,E,YAtCX,aAAc,IAAD,8BACT,+CASJC,eAAiB,SAACC,GACfC,aAAaC,QAAQ,QAASF,EAAEG,OAAOC,OACvC,EAAKC,SAAS,CACVC,MAAQN,EAAEG,OAAOC,QAErBG,QAAQC,IAAI,QAbX,EAAKC,MAAM,CACPH,MAAQL,aAAaS,QAAQ,SAAWT,aAAaS,QAAQ,SAAW,IAHnE,E,iFAOTC,KAAKC,UAAUC,U,+BAWT,IAAD,OACL,OACI,6BACI,2BACIC,KAAK,OACLC,YAAY,yBACZlB,UAAU,QACVmB,GAAG,aACHC,aAAcN,KAAKF,MAAMH,MACzBY,SAAUP,KAAKZ,eACfoB,IAAK,SAAAb,GACD,EAAKM,UAAYN,GAErBc,UAAWT,KAAKU,MAAMC,qB,GAhCtBC,IAAMC,WC6EXC,E,iLA5ED,IAAD,EAODd,KAAKU,MALLK,EAFC,EAEDA,MACAC,EAHC,EAGDA,WACAC,EAJC,EAIDA,uBACAC,EALC,EAKDA,WACAC,EANC,EAMDA,iBAEJ,OACI,6BACKJ,EAAMK,KAAI,SAAAC,GACP,OACI,yBAAKC,IAAKD,EAAKhB,GAAInB,UAAS,QACxB,yBAAKA,UAAU,kBACX,2BACImB,GAAIgB,EAAKhB,GACTF,KAAK,WACLjB,UAAU,OACVqC,iBACIF,EAAKG,YAETC,QAAS,kBACLR,EAAuBI,EAAKhB,OAIpC,yBACInB,UAAU,sBACVwC,cAAe,kBAAMR,EAAWG,EAAKhB,MAErC,0BACIsB,MACIN,EAAKO,WACC,CAAEC,QAAS,QACX,CAAEA,QAAS,SAErB3C,UACImC,EAAKG,YACC,YACA,UAGTH,EAAKS,MAEV,2BACIxB,aAAce,EAAKS,KACnBrB,UAAW,SAAApB,GAAC,OACR8B,EAAiB9B,EAAGgC,EAAKhB,KAE7BnB,UAAU,4BACVyC,MACIN,EAAKO,WACC,CAAEC,QAAS,SACX,CAAEA,QAAS,QAErB1B,KAAK,WAIjB,yBAAKjB,UAAU,UACX,0BACIA,UAAU,WACVyC,MAAO,CAAEI,SAAU,QACnBN,QAAS,kBAAMT,EAAWK,EAAKhB,MAHnC,oB,GA7DXO,IAAMC,WC8BZmB,EA7BC,SAAAtB,GAAU,IACduB,EAAgDvB,EAAhDuB,wBAAyBC,EAAuBxB,EAAvBwB,OAAQC,EAAezB,EAAfyB,WACzC,OACI,yBAAKjD,UAAU,qBACX,6BACI,4BACIA,UAAsB,QAAXgD,EAAmB,SAAW,GACzCT,QAAS,kBAAMQ,EAAwB,SAF3C,OAMA,4BACI/C,UAAsB,WAAXgD,EAAsB,SAAW,GAC5CT,QAAS,kBAAMQ,EAAwB,YAF3C,UAMA,4BACI/C,UAAsB,cAAXgD,EAAyB,SAAW,GAC/CT,QAAS,kBAAMQ,EAAwB,eAF3C,YAMA,4BAAQR,QAAS,kBAAMU,MAAvB,YCjBDC,EANI,SAAA1B,GAAU,IAEnB2B,EADY3B,EAAVK,MACauB,QAAO,SAAAjB,GAAI,OAAyB,IAArBA,EAAKG,eACzC,OAAO,6BAAMa,EAAOE,OAAP,UAAmBF,EAAOE,OAA1B,eAAgD,OCyKlDC,G,kBApKX,aAAe,IAAD,8BACV,+CAqBJrB,iBAAmB,SAAC9B,EAAGgB,GACnB,GAAc,UAAVhB,EAAEiC,IAAiB,CACnB,IAAKjC,EAAEG,OAAOC,MACV,MAAO,GAEX,IAAMgD,EAAW,EAAK3C,MAAMiB,MAAMK,KAAI,SAAAC,GAKlC,OAJIA,EAAKhB,KAAOA,IACZgB,EAAKS,KAAOzC,EAAEG,OAAOC,MACrB4B,EAAKO,YAAcP,EAAKO,YAErBP,KAEX,EAAK3B,SAAS,CACVqB,MAAO0B,MAnCL,EAwCdvB,WAAa,SAAAb,GACT,IAAMoC,EAAW,EAAK3C,MAAMiB,MAAMK,KAAI,SAAAC,GAIlC,OAHIA,EAAKhB,KAAOA,IACZgB,EAAKO,YAAcP,EAAKO,YAErBP,KAEX,EAAK3B,SAAS,CACVqB,MAAO0B,KAhDD,EAoDdC,YAAc,WAeV,MAb0B,WAAtB,EAAK5C,MAAMoC,OACK,EAAKpC,MAAMiB,MAAMuB,QAC7B,SAAAjB,GAAI,OAAyB,IAArBA,EAAKG,eAEY,cAAtB,EAAK1B,MAAMoC,OACF,EAAKpC,MAAMiB,MAAMuB,QAC7B,SAAAjB,GAAI,OAAyB,IAArBA,EAAKG,eAEY,aAAtB,EAAK1B,MAAMoC,OACF,GAEA,EAAKpC,MAAMiB,OAjErB,EAsEdJ,cAAgB,SAAAtB,GACZ,GAAc,UAAVA,EAAEiC,IAAiB,CACnB,IAAKjC,EAAEG,OAAOC,MACV,OAAO,KAEX,EAAKC,SAAS,CACVqB,MAAM,GAAD,mBACE,EAAKjB,MAAMiB,OADb,CAED,CACIV,GAAI,EAAKP,MAAM6C,OAAS,EACxBb,KAAMzC,EAAEG,OAAOC,MACf+B,aAAa,EACbI,YAAY,KAGpBe,OAAQ,EAAK7C,MAAM6C,OAAS,MArF1B,EA0FdV,wBAA0B,SAAAC,GACtBtC,QAAQC,IAAIqC,GACZ,EAAKxC,SAAS,CACVwC,OAAQA,KA7FF,EAiGdjB,uBAAyB,SAAAZ,GACrB,IAAMU,EAAQ,EAAKjB,MAAMiB,MACzBA,EAAM6B,MAAK,SAAAvB,GAAI,OAAIA,EAAKhB,KAAOA,KAAImB,aAAeT,EAAM6B,MACpD,SAAAvB,GAAI,OAAIA,EAAKhB,KAAOA,KACtBmB,YAEF,EAAK9B,SAAS,CACVqB,WAxGM,EA4GdC,WAAa,SAAAX,GACT,EAAKX,SAAS,CACVqB,MAAO,EAAKjB,MAAMiB,MAAMuB,QAAO,SAAAjB,GAAI,OAAIA,EAAKhB,KAAOA,QA9G7C,EAkHd8B,WAAa,WACT,EAAKzC,SACD,CACIqB,MAAO,GACP2B,YAAa,GACbC,OAAQ,GAEZrD,aAAauD,UAvHjB,EAAK/C,MAAQ,CACTiB,MAAO+B,KAAKC,MAAMzD,aAAaS,QAAQ,UACjC+C,KAAKC,MAAMzD,aAAaS,QAAQ,UAChC,GACN4C,OAAQrD,aAAaS,QAAQ,WACtBT,aAAaS,QAAQ,UACtB,EACNmC,OAAQ5C,aAAaS,QAAQ,UACvBT,aAAaS,QAAQ,UACrB,OAXA,E,kFAgBVT,aAAaC,QAAQ,QAASuD,KAAKE,UAAUhD,KAAKF,MAAMiB,QACxDzB,aAAaC,QAAQ,SAAUS,KAAKF,MAAM6C,QAC1CrD,aAAaC,QAAQ,SAAUS,KAAKF,MAAMoC,QAC1CtC,QAAQC,IAAIP,gB,+BA0GN,IAAD,EACqBU,KAAKF,MAAvBiB,EADH,EACGA,MAAOmB,EADV,EACUA,OACXe,EAAkBjD,KAAK0C,cAC3B,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKxD,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,CAAOyB,cAAeX,KAAKW,gBAC3B,kBAAC,EAAD,CACII,MAAOkC,EACPjC,WAAYhB,KAAKgB,WACjBC,uBACIjB,KAAKiB,uBAETC,WAAYlB,KAAKkB,WACjBC,iBAAkBnB,KAAKmB,mBAE1BJ,EAAMwB,OACH,kBAAC,EAAD,CAAYL,OAAQA,EAAQnB,MAAOA,IACnC,KACHA,EAAMwB,OACH,kBAAC,EAAD,CACIN,wBACIjC,KAAKiC,wBAETC,OAAQlC,KAAKF,MAAMoC,OACnBC,WAAYnC,KAAKmC,aAErB,a,GA5JdvB,IAAMC,YCJxBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a27b4d28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header-container\">\r\n            <h1 className=\"header\">todos</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nclass Input extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            input : localStorage.getItem('input') ? localStorage.getItem('input') : '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n    }\r\n    \r\n    handleOnChange = (e) =>{\r\n       localStorage.setItem('input', e.target.value)\r\n       this.setState({\r\n           input : e.target.value\r\n       })\r\n       console.log('yes')\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"What needs to be done?\"\r\n                    className=\"input\"\r\n                    id=\"todo-input\"\r\n                    defaultValue={this.state.input}\r\n                    onChange={this.handleOnChange}\r\n                    ref={input => {\r\n                        this.nameInput = input;\r\n                    }}\r\n                    onKeyDown={this.props.handleKeyDown}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nclass Render extends React.Component {\r\n    render() {\r\n        const {\r\n            todos,\r\n            removeTodo,\r\n            handleChangeTodoStatus,\r\n            renameTodo,\r\n            handleRenameTodo\r\n        } = this.props;\r\n        return (\r\n            <div>\r\n                {todos.map(todo => {\r\n                    return (\r\n                        <div key={todo.id} className={`todo`}>\r\n                            <div className=\"todo-left-part\">\r\n                                <input\r\n                                    id={todo.id}\r\n                                    type=\"checkbox\"\r\n                                    className=\"mark\"\r\n                                    defaultChecked={\r\n                                        todo.isComplited ? true : false\r\n                                    }\r\n                                    onClick={() =>\r\n                                        handleChangeTodoStatus(todo.id)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    className=\"todo-text-container\"\r\n                                    onDoubleClick={() => renameTodo(todo.id)}\r\n                                >\r\n                                    <span\r\n                                        style={\r\n                                            todo.isRenaming\r\n                                                ? { display: \"none\" }\r\n                                                : { display: \"block\" }\r\n                                        }\r\n                                        className={\r\n                                            todo.isComplited\r\n                                                ? \"complited\"\r\n                                                : \"active\"\r\n                                        }\r\n                                    >\r\n                                        {todo.name}\r\n                                    </span>\r\n                                    <input\r\n                                        defaultValue={todo.name}\r\n                                        onKeyDown={e =>\r\n                                            handleRenameTodo(e, todo.id)\r\n                                        }\r\n                                        className=\"todo-text-container-input\"\r\n                                        style={\r\n                                            todo.isRenaming\r\n                                                ? { display: \"block\" }\r\n                                                : { display: \"none\" }\r\n                                        }\r\n                                        type=\"text\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"x-icon\">\r\n                                <span\r\n                                    className=\"remove-x\"\r\n                                    style={{ fontSize: \"25px\" }}\r\n                                    onClick={() => removeTodo(todo.id)}\r\n                                >\r\n                                    &#10008;\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Render;\r\n","import React from \"react\";\r\n\r\nconst Buttons = props => {\r\n    const { handleChangeStateStatus, status, clearTodos } = props;\r\n    return (\r\n        <div className=\"buttons-container\">\r\n            <div>\r\n                <button\r\n                    className={status === \"all\" ? \"select\" : \"\"}\r\n                    onClick={() => handleChangeStateStatus(\"all\")}\r\n                >\r\n                    All\r\n                </button>\r\n                <button\r\n                    className={status === \"active\" ? \"select\" : \"\"}\r\n                    onClick={() => handleChangeStateStatus(\"active\")}\r\n                >\r\n                    Active\r\n                </button>\r\n                <button\r\n                    className={status === \"complited\" ? \"select\" : \"\"}\r\n                    onClick={() => handleChangeStateStatus(\"complited\")}\r\n                >\r\n                    Comlited\r\n                </button>\r\n                <button onClick={() => clearTodos()}>Clear</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nconst TodoCounts = props => {\r\n    const { todos } = props;\r\n    const active = todos.filter(todo => todo.isComplited === false);\r\n    return <div>{active.length ? `${active.length} items left` : null}</div>;\r\n};\r\n\r\nexport default TodoCounts;\r\n","import React from \"react\";\n// components\nimport Header from \"./Components/Header/Header\";\nimport Input from \"./Components/Input/Input\";\nimport Render from \"./Components/Render/Render\";\nimport Buttons from \"./Components/Buttons/Buttons\";\nimport TodoCounts from \"./Components/TodoCounts/TodoCounts\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            todos: JSON.parse(localStorage.getItem(\"todos\"))\n                ? JSON.parse(localStorage.getItem(\"todos\"))\n                : [],\n            todoId: localStorage.getItem(\"todoId\")\n                ? +localStorage.getItem(\"todoId\")\n                : 0,\n            status: localStorage.getItem(\"status\")\n                ? localStorage.getItem(\"status\")\n                : \"all\"\n        };\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n        localStorage.setItem(\"todoId\", this.state.todoId);\n        localStorage.setItem(\"status\", this.state.status);\n        console.log(localStorage);\n    }\n\n    handleRenameTodo = (e, id) => {\n        if (e.key === \"Enter\") {\n            if (!e.target.value) {\n                return \"\";\n            }\n            const newArray = this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.name = e.target.value;\n                    todo.isRenaming = !todo.isRenaming;\n                }\n                return todo;\n            });\n            this.setState({\n                todos: newArray\n            });\n        }\n    };\n\n    renameTodo = id => {\n        const newArray = this.state.todos.map(todo => {\n            if (todo.id === id) {\n                todo.isRenaming = !todo.isRenaming;\n            }\n            return todo;\n        });\n        this.setState({\n            todos: newArray\n        });\n    };\n\n    filterTodos = () => {\n        let filteredTodos;\n        if (this.state.status === \"active\") {\n            filteredTodos = this.state.todos.filter(\n                todo => todo.isComplited === false\n            );\n        } else if (this.state.status === \"complited\") {\n            filteredTodos = this.state.todos.filter(\n                todo => todo.isComplited === true\n            );\n        } else if (this.state.status === \"clearAll\") {\n            filteredTodos = [];\n        } else {\n            filteredTodos = this.state.todos;\n        }\n        return filteredTodos;\n    };\n\n    handleKeyDown = e => {\n        if (e.key === \"Enter\") {\n            if (!e.target.value) {\n                return null;\n            }\n            this.setState({\n                todos: [\n                    ...this.state.todos,\n                    {\n                        id: this.state.todoId + 1,\n                        name: e.target.value,\n                        isComplited: false,\n                        isRenaming: false\n                    }\n                ],\n                todoId: this.state.todoId + 1\n            });\n        }\n    };\n\n    handleChangeStateStatus = status => {\n        console.log(status);\n        this.setState({\n            status: status\n        });\n    };\n\n    handleChangeTodoStatus = id => {\n        const todos = this.state.todos;\n        todos.find(todo => todo.id === id).isComplited = !todos.find(\n            todo => todo.id === id\n        ).isComplited;\n\n        this.setState({\n            todos\n        });\n    };\n\n    removeTodo = id => {\n        this.setState({\n            todos: this.state.todos.filter(todo => todo.id !== id)\n        });\n    };\n\n    clearTodos = () => {\n        this.setState(\n            {\n                todos: [],\n                filterTodos: [],\n                todoId: 0\n            },\n            localStorage.clear()\n        );\n    };\n\n    render() {\n        const { todos, status } = this.state;\n        let normalizedTodos = this.filterTodos();\n        return (\n            <div>\n                <Header />\n                <div className=\"todo-part\">\n                    <div className=\"todos-container\">\n                        <div className=\"todos\">\n                            <Input handleKeyDown={this.handleKeyDown} />\n                            <Render\n                                todos={normalizedTodos}\n                                removeTodo={this.removeTodo}\n                                handleChangeTodoStatus={\n                                    this.handleChangeTodoStatus\n                                }\n                                renameTodo={this.renameTodo}\n                                handleRenameTodo={this.handleRenameTodo}\n                            />\n                            {todos.length ? (\n                                <TodoCounts status={status} todos={todos} />\n                            ) : null}\n                            {todos.length ? (\n                                <Buttons\n                                    handleChangeStateStatus={\n                                        this.handleChangeStateStatus\n                                    }\n                                    status={this.state.status}\n                                    clearTodos={this.clearTodos}\n                                />\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// components\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}