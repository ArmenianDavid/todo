{"version":3,"sources":["Components/Header/Header.js","Components/Input/Input.js","Components/Render/Render.js","Components/Buttons/Buttons.js","App.js","index.js"],"names":["Header","className","Input","props","type","placeholder","id","onKeyDown","handleKeyDown","Render","todos","removeTodo","handleChangeTodoStatus","map","todo","key","checked","isComplited","onClick","name","style","fontSize","Buttons","filterTodos","status","App","activeTodos","state","filter","setState","filteredTodos","complitedTodos","e","target","value","todoId","find","this","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d7bbd73.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () =>{\r\n  return(\r\n    <div className=\"header-container\">\r\n        <h1 className=\"header\">todos</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Input = (props) =>{\r\n  return(\r\n    <div>\r\n      <input\r\n          type=\"text\"\r\n          placeholder=\"What needs to be done?\"\r\n          className=\"input\"\r\n          id=\"todo-input\"\r\n          onKeyDown={props.handleKeyDown}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Render = (props) =>{\r\n   const {todos , removeTodo , handleChangeTodoStatus} = props\r\n\r\n   return(\r\n    <div>\r\n    {todos.map(todo => {\r\n        return (\r\n            <div\r\n              key={todo.id}\r\n              className={`todo`}>\r\n                \r\n                <div>\r\n                    <input\r\n                        id={todo.id}\r\n                        type=\"checkbox\"\r\n                        className=\"mark\"\r\n                        checked={todo.isComplited ? true : false}\r\n                        onClick={() => handleChangeTodoStatus(todo.id)}/>\r\n\r\n                    <span className={todo.isComplited ? \"complited\" : \"active\"}>\r\n                      {todo.name}\r\n                    </span>\r\n                </div>\r\n                <div className=\"x-icon\">\r\n                    <span\r\n                      className='remove-x'\r\n                      style={{ fontSize: \"25px\" }}\r\n                      onClick={() => removeTodo(todo.id)}>\r\n                        &#10008;\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    })}\r\n</div>\r\n   )\r\n}\r\n\r\nexport default Render","import React from 'react'\r\n\r\nconst Buttons = (props) =>{\r\n  const { filterTodos , status } = props\r\n  return (\r\n    <div className='buttons-container'>\r\n        <div>\r\n            <button\r\n              className={status === 'all' ? 'select' : ''}\r\n              onClick={() =>filterTodos('all')}\r\n             >\r\n                All\r\n                </button>\r\n            <button\r\n              className={status === 'active' ? 'select' : ''}\r\n              onClick={() =>filterTodos('active')}\r\n              >\r\n                Active\r\n                </button>\r\n            <button\r\n              className={status === 'complited' ? 'select' : ''}\r\n              onClick={() =>filterTodos('complited')}\r\n             >\r\n                Comlited\r\n                </button>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Buttons","import React from \"react\";\nimport Header from './Components/Header/Header'\nimport Input from './Components/Input/Input'\nimport Render from './Components/Render/Render'\nimport Buttons from './Components/Buttons/Buttons'\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            todos: [],\n            todoId: 0,\n            filteredTodos : [],\n            status : 'all',\n        };\n    }\n\n    filterTodos = (status) =>{\n        if( status === 'active'){\n           const activeTodos = this.state.todos.filter( todo => todo.isComplited === false) \n           this.setState({ filteredTodos : activeTodos , status : status})\n        }else if( status === 'complited'){\n            const complitedTodos = this.state.todos.filter( todo => todo.isComplited === true) \n            this.setState({ filteredTodos : complitedTodos , status : status})\n        } else {\n           this.setState({ filteredTodos : this.state.todos , status : status})\n        }\n    }\n\n    handleKeyDown = e => {\n        if (e.key === \"Enter\") {\n            if(!e.target.value){ return '' } \n            this.setState({\n                todos: [\n                    ...this.state.todos,\n                    {\n                        id: this.state.todoId + 1,\n                        name: e.target.value,\n                        isComplited: false\n                    }\n                ],\n                todoId: this.state.todoId + 1\n            },() => this.filterTodos(this.state.status));\n        } \n    };\n\n    handleChangeTodoStatus = id => {\n       const todos = this.state.todos;\n       todos.find( todo => todo.id === id).isComplited = !todos.find( todo => todo.id === id).isComplited\n    \n       this.setState({\n           todos\n         })\n       }\n    \n    removeTodo = (id) =>{\n       this.setState({\n           todos : this.state.todos.filter( todo => todo.id !== id)\n       },() => this.filterTodos(this.state.status))\n    }\n\n    \n\n\n    render() {\n        const { todos } = this.state\n        return (\n            <div>\n                <Header />\n                <div className=\"todo-part\">\n                    <div className=\"todos-container\">\n                        <div className=\"todos\">\n                            <Input handleKeyDown={this.handleKeyDown}/>\n                            <Render \n                                todos={this.state.filteredTodos} \n                                removeTodo={this.removeTodo} \n                                handleChangeTodoStatus={this.handleChangeTodoStatus} />\n                            {todos.length ? <Buttons filterTodos = {this.filterTodos} status={this.state.status} /> : null}    \n                        </div>\n                       \n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'))"],"sourceRoot":""}