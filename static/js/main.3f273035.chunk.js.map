{"version":3,"sources":["Components/Header/Header.js","Components/Input/Input.js","Components/Render/Render.js","Components/Buttons/Buttons.js","Components/TodoCounts/TodoCounts.js","App.js","index.js"],"names":["Header","className","Input","this","nameInput","focus","type","placeholder","id","ref","input","onKeyDown","props","handleKeyDown","React","Component","Render","todos","removeTodo","handleChangeTodoStatus","renameTodo","handleRenameTodo","map","todo","key","defaultChecked","isComplited","onClick","onDoubleClick","style","isRenaming","display","name","defaultValue","e","fontSize","Buttons","handleChangeStateStatus","status","clearTodos","TodoCounts","active","filter","length","App","target","value","newArray","state","setState","filterTodos","todoId","console","log","find","normalizedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f273035.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () =>{\r\n  return(\r\n    <div className=\"header-container\">\r\n        <h1 className=\"header\">todos</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nclass Input extends React.Component{\r\n  componentDidMount(){\r\n    this.nameInput.focus()\r\n  }\r\n  render(){\r\n    return(\r\n    <div>\r\n      <input\r\n          type=\"text\"\r\n          placeholder=\"What needs to be done?\"\r\n          className=\"input\"\r\n          id=\"todo-input\"\r\n          ref={(input) => { this.nameInput = input; }} \r\n          onKeyDown={this.props.handleKeyDown}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n  }\r\n  \r\n\r\nexport default Input","import React from 'react'\r\n\r\nclass Render extends React.Component{\r\n\r\n\r\n   render(){\r\n        const {todos , removeTodo , handleChangeTodoStatus , renameTodo , handleRenameTodo} = this.props\r\n   return(\r\n     \r\n    <div>\r\n    {todos.map(todo => {\r\n        return (\r\n            <div\r\n              key={todo.id}\r\n              className={`todo`}>\r\n                \r\n                <div className='todo-left-part'>\r\n                    <input\r\n                        id={todo.id}\r\n                        type=\"checkbox\"\r\n                        className=\"mark\"\r\n                        defaultChecked={todo.isComplited ? true : false}\r\n                        onClick={() => handleChangeTodoStatus(todo.id)}/>\r\n\r\n                    <div className='todo-text-container' onDoubleClick={() =>renameTodo(todo.id)}>\r\n                       <span \r\n                         style={todo.isRenaming ? {display : 'none'} : {display : 'block'} }\r\n                         className={todo.isComplited ? \"complited\" : \"active\"}>\r\n                           {todo.name}\r\n                       </span>\r\n                       <input \r\n                         defaultValue={todo.name}\r\n                         onKeyDown={(e) =>handleRenameTodo(e , todo.id)}\r\n                         className='todo-text-container-input'\r\n                         style={todo.isRenaming ? {display : 'block'} : {display : 'none'}  }\r\n                         type='text' />\r\n                     </div>\r\n                </div>\r\n                <div className=\"x-icon\">\r\n                    <span\r\n                      className='remove-x'\r\n                      style={{ fontSize: \"25px\" }}\r\n                      onClick={() => removeTodo(todo.id)}>\r\n                        &#10008;\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    })}\r\n</div>\r\n   )\r\n} \r\n   }\r\n \r\n\r\nexport default Render","import React from 'react'\r\n\r\nconst Buttons = (props) =>{\r\n  const { handleChangeStateStatus , status , clearTodos} = props\r\n  return (\r\n    <div className='buttons-container'>\r\n        <div>\r\n            <button\r\n              className={status === 'all' ? 'select' : ''}\r\n              onClick={() =>handleChangeStateStatus('all')}\r\n             >\r\n                All\r\n                </button>\r\n            <button\r\n              className={status === 'active' ? 'select' : ''}\r\n              onClick={() =>handleChangeStateStatus('active')}\r\n              >\r\n                Active\r\n                </button>\r\n            <button\r\n              className={status === 'complited' ? 'select' : ''}\r\n              onClick={() =>handleChangeStateStatus('complited')}\r\n             >\r\n                Comlited\r\n                </button>\r\n            <button\r\n              onClick={() => clearTodos()}\r\n              >\r\n                Clear\r\n                </button>\r\n\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Buttons","import React from 'react'\r\n\r\nconst TodoCounts = (props) =>{\r\n   const { todos } = props\r\n   const active = todos.filter( todo => todo.isComplited === false)\r\n   return (\r\n     <div>\r\n       {active.length ? `${active.length} items left` : null }\r\n     </div>\r\n   )\r\n}\r\n\r\nexport default TodoCounts","import React from \"react\";\nimport Header from './Components/Header/Header'\nimport Input from './Components/Input/Input'\nimport Render from './Components/Render/Render'\nimport Buttons from './Components/Buttons/Buttons'\nimport TodoCounts from './Components/TodoCounts/TodoCounts'\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            todos: [],\n            todoId: 0,\n            status : 'all',\n        };\n    }\n\n\n    handleRenameTodo = (e , id) =>{\n        if (e.key === \"Enter\") {\n            if(!e.target.value){ return '' } \n        const newArray = this.state.todos.map( todo => {\n            if(todo.id === id){ \n                todo.name = e.target.value \n                todo.isRenaming = !todo.isRenaming\n            }\n            return todo\n        })\n        this.setState({\n          todos : newArray \n        })\n      } \n    }\n\n    renameTodo = (id) =>{\n       const newArray = this.state.todos.map( todo => {\n           if(todo.id === id){ todo.isRenaming = !todo.isRenaming}\n           return todo\n       })\n       this.setState({\n         todos : newArray \n       })\n    }\n\n    filterTodos = () =>{\n        let filteredTodos;\n        if( this.state.status === 'active'){\n            filteredTodos = this.state.todos.filter( todo => todo.isComplited === false) \n        }else if( this.state.status === 'complited'){\n             filteredTodos = this.state.todos.filter( todo => todo.isComplited === true) \n        }else if(this.state.status === 'clearAll'){\n             filteredTodos = [];\n        }\n        else{\n             filteredTodos = this.state.todos;\n        } \n        return filteredTodos\n    }\n\n    handleKeyDown = e => {\n        if (e.key === \"Enter\") {\n            if(!e.target.value){ return null } \n            this.setState({\n                todos: [\n                    ...this.state.todos,\n                    {\n                        id: this.state.todoId + 1,\n                        name: e.target.value,\n                        isComplited: false,\n                        isRenaming : false,\n                    }\n                ],\n                todoId: this.state.todoId + 1\n              },\n            );\n        } \n    };\n\n    handleChangeStateStatus = (status) =>{\n        console.log(status)\n       this.setState({\n           status : status\n       })\n    }\n\n    handleChangeTodoStatus = id => {\n       const todos = this.state.todos;\n       todos.find( todo => todo.id === id).isComplited = !todos.find( todo => todo.id === id).isComplited\n    \n       this.setState({\n           todos\n         },\n         )\n       }\n    \n    removeTodo = (id) =>{\n       this.setState({\n           todos : this.state.todos.filter( todo => todo.id !== id)\n       },\n       )\n    }\n\n    clearTodos = () =>{\n        this.setState({\n            todos : [],\n            filterTodos : []\n        },\n        )\n    }\n\n\n    render() {\n        const { todos , status  } = this.state\n        let normalizedTodos = this.filterTodos();\n        return (\n            <div>\n                <Header />\n                <div className=\"todo-part\">\n                    <div className=\"todos-container\">\n                        <div className=\"todos\">\n                            <Input handleKeyDown={this.handleKeyDown}/>\n                            <Render \n                                todos={normalizedTodos} \n                                removeTodo={this.removeTodo} \n                                handleChangeTodoStatus={this.handleChangeTodoStatus}\n                                renameTodo={this.renameTodo}\n                                handleRenameTodo={this.handleRenameTodo}\n                                />\n                            {todos.length ? <TodoCounts \n                                               status={status} \n                                               todos={todos} /> : null}\n                            {todos.length ? <Buttons \n                                               handleChangeStateStatus = {this.handleChangeStateStatus}\n                                               status={this.state.status}\n                                               clearTodos={this.clearTodos}\n                                                /> : null}    \n                        </div>\n                       \n                    </div>\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'))"],"sourceRoot":""}